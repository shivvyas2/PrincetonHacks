"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.addKnotListener = exports.Knot = void 0;
var _reactNative = require("react-native");
const LINKING_ERROR = `The package 'react-native-knotapi' doesn't seem to be linked. Make sure: \n\n` + _reactNative.Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo managed workflow\n';
const Knotapi = _reactNative.NativeModules.Knotapi ? _reactNative.NativeModules.Knotapi : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }
});
const eventEmitter = new _reactNative.NativeEventEmitter(Knotapi);
const Knot = exports.Knot = {
  open: params => {
    _reactNative.InteractionManager.runAfterInteractions(() => {
      setTimeout(() => {
        Knotapi?.open(params);
      }, 50);
    });
  },
  close: () => {
    Knotapi?.close();
  }
};
const addKnotListener = (eventName, callback) => {
  return eventEmitter.addListener(`${eventName}`, callback);
};
exports.addKnotListener = addKnotListener;
var _default = exports.default = Knotapi;
//# sourceMappingURL=index.cjs.map